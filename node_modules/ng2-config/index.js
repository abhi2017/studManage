var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import { NgModule, APP_INITIALIZER } from '@angular/core';
import { ConfigLoader, ConfigStaticLoader, ConfigService } from './src/config.service';
export * from './src/config.service';
export function configLoaderFactory() {
    return new ConfigStaticLoader('');
}
export function configInitializerFactory(config) {
    return function () { return config.init(); };
}
var ConfigModule = ConfigModule_1 = (function () {
    function ConfigModule() {
    }
    ConfigModule.forRoot = function (providedLoader) {
        if (providedLoader === void 0) { providedLoader = {
            provide: ConfigLoader,
            useFactory: (configLoaderFactory)
        }; }
        return {
            ngModule: ConfigModule_1,
            providers: [
                providedLoader,
                ConfigService,
                {
                    provide: APP_INITIALIZER,
                    useFactory: (configInitializerFactory),
                    deps: [ConfigService],
                    multi: true
                }
            ]
        };
    };
    return ConfigModule;
}());
ConfigModule = ConfigModule_1 = __decorate([
    NgModule()
], ConfigModule);
export { ConfigModule };
var ConfigModule_1;
