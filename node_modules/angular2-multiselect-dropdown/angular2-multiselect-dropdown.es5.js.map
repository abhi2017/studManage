{"version":3,"file":"angular2-multiselect-dropdown.es5.js","sources":["../out-tsc/lib/src/angular2-multiselect-dropdown/multiselect.model.ts","../out-tsc/lib/src/angular2-multiselect-dropdown/clickOutside.ts","../out-tsc/lib/src/angular2-multiselect-dropdown/list-filter.ts","../out-tsc/lib/src/angular2-multiselect-dropdown/multiselect.component.ts","../out-tsc/lib/angular2-multiselect-dropdown.ts"],"sourcesContent":["\nexport class ListItem{\r\n    id: Number;\r\n    itemName: String\r\n}\n\nfunction ListItem_tsickle_Closure_declarations() {\n/** @type {?} */\nListItem.prototype.id;\n/** @type {?} */\nListItem.prototype.itemName;\n}\n\nexport class MyException {\r\n\tstatus : number;\r\n\tbody : any;\n/**\n * @param {?} status\n * @param {?} body\n */\nconstructor(status : number, body : any) {\r\n\t\tthis.status = status;\r\n\t\tthis.body = body;\r\n\t}\r\n\t\r\n}\n\nfunction MyException_tsickle_Closure_declarations() {\n/** @type {?} */\nMyException.prototype.status;\n/** @type {?} */\nMyException.prototype.body;\n}\n","import {Directive, ElementRef, Output, EventEmitter, HostListener} from '@angular/core';\nexport class ClickOutsideDirective {\n/**\n * @param {?} _elementRef\n */\nconstructor(private _elementRef: ElementRef) {\r\n    }\npublic clickOutside = new EventEmitter<MouseEvent>();\n/**\n * @param {?} event\n * @param {?} targetElement\n * @return {?}\n */\npublic onClick(event: MouseEvent, targetElement: HTMLElement): void {\r\n        if (!targetElement) {\r\n            return;\r\n        }\r\n\r\n        const /** @type {?} */ clickedInside = this._elementRef.nativeElement.contains(targetElement);\r\n        if (!clickedInside) {\r\n            this.clickOutside.emit(event);\r\n        }\r\n    }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\r\n    selector: '[clickOutside]'\r\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'clickOutside': [{ type: Output },],\n'onClick': [{ type: HostListener, args: ['document:click', ['$event', '$event.target'], ] },],\n};\n}\n\nfunction ClickOutsideDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nClickOutsideDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nClickOutsideDirective.ctorParameters;\n/** @type {?} */\nClickOutsideDirective.propDecorators;\n/** @type {?} */\nClickOutsideDirective.prototype.clickOutside;\n/** @type {?} */\nClickOutsideDirective.prototype._elementRef;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\nimport { ListItem } from './multiselect.model';\nexport class ListFilterPipe implements PipeTransform {\n/**\n * @param {?} items\n * @param {?} filter\n * @return {?}\n */\ntransform(items: ListItem[], filter: ListItem): ListItem[] {\r\n        if (!items || !filter) {\r\n            return items;\r\n        }\r\n        // filter items array, items which match and return true will be kept, false will be filtered out\r\n        return items.filter((item: ListItem) => this.applyFilter(item, filter));\r\n    }\n/**\n * Perform the filtering.\r\r\\@param {Book} book The book to compare to the filter.\r\\@param {Book} filter The filter to apply.\r\\@return {boolean} True if book satisfies filters, false if not.\n * @param {?} item\n * @param {?} filter\n * @return {?}\n */\napplyFilter(item: ListItem, filter: ListItem): boolean {\r\n        return !(filter.itemName && item.itemName && item.itemName.toLowerCase().indexOf(filter.itemName.toLowerCase()) === -1);\r\n    }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{\r\n    name: 'listFilter',\r\n    pure: false\r\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ListFilterPipe_tsickle_Closure_declarations() {\n/** @type {?} */\nListFilterPipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nListFilterPipe.ctorParameters;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, OnInit, NgModule, OnChanges, ViewEncapsulation,forwardRef, Input, Output, EventEmitter, ElementRef, AfterViewInit, Pipe, PipeTransform } from '@angular/core';\r\nimport { FormsModule, NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ListItem , MyException} from './multiselect.model';\r\nimport { DropdownSettings } from './multiselect.interface';\r\nimport { ClickOutsideDirective } from './clickOutside';\r\nimport { ListFilterPipe } from './list-filter';\r\n\r\nexport const /** @type {?} */ DROPDOWN_CONTROL_VALUE_ACCESSOR: any = {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => AngularMultiSelect),\r\n    multi: true\r\n};\r\nconst /** @type {?} */ noop = () => {\r\n};\nexport class AngularMultiSelect implements OnInit, ControlValueAccessor {\r\n\r\n     \r\n    data: Array<ListItem>;\r\n    \r\n    \r\n    settings:DropdownSettings;\r\n    \r\n    \r\n    onSelect: EventEmitter<ListItem> = new EventEmitter<ListItem>();\r\n\r\n    \r\n    onDeSelect: EventEmitter<ListItem> = new EventEmitter<ListItem>();\r\n\r\n    \r\n    onSelectAll: EventEmitter<Array<ListItem>> = new EventEmitter<Array<ListItem>>();\r\n\r\n    \r\n    onDeSelectAll: EventEmitter<Array<ListItem>> = new EventEmitter<Array<ListItem>>();\npublic selectedItems: Array<ListItem>;\npublic isActive: boolean = false;\npublic isSelectAll: boolean = false;\r\n    filter: ListItem = new ListItem();\r\n    defaultSettings:DropdownSettings = {\r\n        singleSelection: false,\r\n        text:'Select',\r\n        enableCheckAll: true,\r\n        selectAllText: 'Select All',\r\n        unSelectAllText: 'UnSelect All',\r\n        enableSearchFilter: false,\r\n        maxHeight: 300,\r\n        badgeShowLimit: 999999999999,\r\n        classes:'',\r\n        disabled: false,\r\n        searchPlaceholderText: 'Search'\r\n    }\nconstructor(){\r\n\r\n    }\n/**\n * @return {?}\n */\nngOnInit(){\r\n         this.settings = Object.assign(this.defaultSettings, this.settings);\r\n    }\n/**\n * @return {?}\n */\nngDoCheck(){\r\n        if(this.selectedItems){\r\n            if(this.selectedItems.length == 0 || this.data.length == 0 || this.selectedItems.length < this.data.length){\r\n                this.isSelectAll = false;\r\n            }\r\n        }\r\n    }\n/**\n * @param {?} item\n * @param {?} index\n * @return {?}\n */\nonItemClick(item: ListItem, index: number){\r\n\r\n                if(this.settings.disabled){\r\n                    return false;\r\n                }\r\n        \r\n                let /** @type {?} */ found = this.isSelected(item);\r\n                let /** @type {?} */ limit = this.selectedItems.length < this.settings.limitSelection ? true : false;\r\n\r\n                if(!found){\r\n                    if(this.settings.limitSelection){\r\n                        if(limit){\r\n                            this.addSelected(item);\r\n                            this.onSelect.emit(item);\r\n                        } \r\n                    }\r\n                    else{\r\n                        this.addSelected(item);\r\n                        this.onSelect.emit(item);\r\n                    }\r\n                    \r\n                }\r\n                else{\r\n                this.removeSelected(item);\r\n                    this.onDeSelect.emit(item);\r\n                }\r\n                if(this.isSelectAll || this.data.length > this.selectedItems.length){\r\n                    this.isSelectAll = false;\r\n                }\r\n                if(this.data.length == this.selectedItems.length){\r\n                    this.isSelectAll = true;\r\n                }    \r\n    }\nprivate onTouchedCallback: () => void = noop;\nprivate onChangeCallback: (_: any) => void = noop;\n/**\n * @param {?} value\n * @return {?}\n */\nwriteValue(value: any) {\r\n        if (value !== undefined && value !== null) {\r\n            if(this.settings.singleSelection){\r\n                try{\r\n                    \r\n                    if(value.length > 1){\r\n                        this.selectedItems = [value[0]];\r\n                        throw new MyException(404, { \"msg\": \"Single Selection Mode, Selected Items cannot have more than one item.\" });\r\n                    }\r\n                    else{\r\n                        this.selectedItems = value;\r\n                    }\r\n                }\r\n                catch( /** @type {?} */e){\r\n                    console.error(e.body.msg);\r\n                }\r\n                \r\n            }\r\n            else{\r\n                if(this.settings.limitSelection){\r\n                            this.selectedItems = value.splice(0,this.settings.limitSelection);\r\n                        }\r\n                 else{\r\n                        this.selectedItems = value;\r\n                    }\r\n                if(this.selectedItems.length === this.data.length && this.data.length > 0){\r\n                            this.isSelectAll = true;\r\n                        }\r\n            }\r\n        } else {\r\n            this.selectedItems = [];\r\n        }\r\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: any) {\r\n        this.onChangeCallback = fn;\r\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: any) {\r\n        this.onTouchedCallback = fn;\r\n    }\n/**\n * @param {?} index\n * @param {?} item\n * @return {?}\n */\ntrackByFn(index: number, item: ListItem){\r\n        return item.id;\r\n    }\n/**\n * @param {?} clickedItem\n * @return {?}\n */\nisSelected(clickedItem:ListItem){\r\n        let /** @type {?} */ found = false;\r\n        this.selectedItems && this.selectedItems.forEach(item => {\r\n           if(clickedItem.id === item.id){\r\n               found = true;\r\n           }\r\n        });\r\n        return found;\r\n    }\n/**\n * @param {?} item\n * @return {?}\n */\naddSelected(item: ListItem){\r\n        if(this.settings.singleSelection){\r\n            this.selectedItems = [];\r\n            this.selectedItems.push(item);\r\n        }\r\n        else\r\n            this.selectedItems.push(item);\r\n            this.onChangeCallback(this.selectedItems);\r\n    }\n/**\n * @param {?} clickedItem\n * @return {?}\n */\nremoveSelected(clickedItem: ListItem){\r\n        this.selectedItems && this.selectedItems.forEach(item => {\r\n           if(clickedItem.id === item.id){\r\n               this.selectedItems.splice(this.selectedItems.indexOf(item),1);\r\n           }\r\n        });    \r\n        this.onChangeCallback(this.selectedItems);\r\n    }\n/**\n * @param {?} evt\n * @return {?}\n */\ntoggleDropdown(evt: any){\r\n        this.isActive = !this.isActive;\r\n        evt.preventDefault();\r\n    }\n/**\n * @return {?}\n */\ncloseDropdown(){\r\n        this.isActive = false;\r\n    }\n/**\n * @return {?}\n */\ntoggleSelectAll(){\r\n        if(!this.isSelectAll){\r\n            this.selectedItems = [];\r\n            this.selectedItems = this.data.slice();\r\n            this.isSelectAll = true;\r\n            this.onChangeCallback(this.selectedItems);\r\n            this.onSelectAll.emit(this.selectedItems);\r\n        }\r\n        else{\r\n            this.selectedItems = [];\r\n            this.isSelectAll = false;\r\n            this.onChangeCallback(this.selectedItems);\r\n            this.onDeSelectAll.emit(this.selectedItems);\r\n        }     \r\n    }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\r\n    selector:'angular2-multiselect',\r\n    template: \"<div class=\\\"cuppa-dropdown\\\" (clickOutside)=\\\"closeDropdown()\\\"> <div class=\\\"selected-list\\\"> <button class=\\\"c-btn\\\" (click)=\\\"toggleDropdown($event)\\\" [disabled]=\\\"settings.disabled\\\" [ngClass]=\\\"{'disabled': settings.disabled}\\\"> <span *ngIf=\\\"selectedItems?.length == 0\\\">{{settings.text}}</span> <span *ngIf=\\\"settings.singleSelection\\\"> <span *ngFor=\\\"let item of selectedItems;trackBy: trackByFn;\\\"> {{item.itemName}} </span> </span> <div class=\\\"c-list\\\" *ngIf=\\\"selectedItems?.length > 0 && !settings.singleSelection\\\"> <div class=\\\"c-token\\\" *ngFor=\\\"let item of selectedItems;trackBy: trackByFn;let k = index\\\" [hidden]=\\\"k > settings.badgeShowLimit-1\\\"> <span class=\\\"c-label\\\">{{item.itemName}}</span> <span class=\\\"fa fa-remove\\\" (click)=\\\"onItemClick(item)\\\" disabled=\\\"true\\\"></span> </div> </div>  <span *ngIf=\\\"selectedItems?.length > settings.badgeShowLimit\\\">+{{selectedItems?.length - settings.badgeShowLimit }}</span> <span class=\\\"fa\\\" [ngClass]=\\\"{'fa-angle-down': !isActive,'fa-angle-up':isActive}\\\"></span> </button>       </div> <div class=\\\"dropdown-list\\\" [hidden]=\\\"!isActive\\\"> <div class=\\\"arrow-up\\\"></div> <div class=\\\"list-area\\\"> <div class=\\\"pure-checkbox select-all\\\" *ngIf=\\\"settings.enableCheckAll && !settings.singleSelection && !settings.limitSelection\\\" (click)=\\\"toggleSelectAll()\\\"> <input type=\\\"checkbox\\\" [checked]=\\\"isSelectAll\\\" [disabled]=\\\"settings.limitSelection == selectedItems?.length\\\"/> <label> <span [hidden]=\\\"isSelectAll\\\">{{settings.selectAllText}}</span> <span [hidden]=\\\"!isSelectAll\\\">{{settings.unSelectAllText}}</span> </label> </div>    <div class=\\\"list-filter\\\" *ngIf=\\\"settings.enableSearchFilter\\\"> <span class=\\\"fa fa-search\\\"></span> <input type=\\\"text\\\" [placeholder]=\\\"settings.searchPlaceholderText\\\" [(ngModel)]=\\\"filter.itemName\\\"> </div>  <ul [style.maxHeight] = \\\"settings.maxHeight+'px'\\\"> <li *ngFor=\\\"let item of data | listFilter:filter; let i = index;\\\" (click)=\\\"onItemClick(item,i)\\\" class=\\\"pure-checkbox\\\"> <input type=\\\"checkbox\\\" [checked]=\\\"isSelected(item)\\\" [disabled]=\\\"settings.limitSelection == selectedItems?.length && !isSelected(item)\\\"/> <label>{{item.itemName}}</label> </li> </ul> <h5 class=\\\"list-message\\\" *ngIf=\\\"data?.length == 0\\\">No Data Available</h5> </div> </div> </div>\",\r\n    host: { '[class]' : 'defaultSettings.classes'  },\r\n    styles: [\".cuppa-dropdown { position: relative; } .c-btn { display: inline-block; background: #fff; border: 1px solid #ccc; border-radius: 3px; font-size: 14px; color: #333; } .c-btn.disabled { background: #ccc; } .c-btn:focus { outline: none; } .selected-list .c-list { float: left; padding: 0px; margin: 0px; } .selected-list .c-list .c-token { list-style: none; padding: 0px 5px; background: #0079FE; color: #fff; border-radius: 2px; margin-right: 4px; float: left; } .selected-list .c-list .c-token .c-label { display: block; float: left; /*width: 50px; white-space: nowrap; text-overflow: ellipsis; overflow: hidden;*/ } .selected-list .c-list .c-token .fa-remove { margin-left: 1px; font-size: 12px; } .selected-list .fa-angle-down, .selected-list .fa-angle-up { font-size: 15pt; position: absolute; right: 10px; top: 25%; } .selected-list button { width: 100%; box-shadow: 0px 1px 5px #959595; padding: 10px; } .dropdown-list { position: absolute; padding-top: 14px; width: 100%; z-index: 9999; } .dropdown-list ul { padding: 0px; list-style: none; overflow: auto; margin: 0px; } .dropdown-list ul li { padding: 10px 10px; cursor: pointer; text-align: left; } .dropdown-list ul li:first-child { padding-top: 10px; } .dropdown-list ul li:last-child { padding-bottom: 10px; } .dropdown-list ul li:hover { background: #f5f5f5; } .dropdown-list ul::-webkit-scrollbar { width: 8px; } .dropdown-list ul::-webkit-scrollbar-thumb { background: #cccccc; border-radius: 5px; } .dropdown-list ul::-webkit-scrollbar-track { background: #f2f2f2; } .arrow-up { width: 0; height: 0; border-left: 13px solid transparent; border-right: 13px solid transparent; border-bottom: 15px solid #fff; margin-left: 15px; position: absolute; top: 0; } .list-area { border: 1px solid #ccc; border-radius: 3px; background: #fff; margin: 0px; box-shadow: 0px 1px 5px #959595; } .select-all { padding: 10px; border-bottom: 1px solid #ccc; text-align: left; } .list-filter { border-bottom: 1px solid #ccc; position: relative; } .list-filter input { border: 0px; width: 100%; height: 35px; padding: 0px 0px 0px 35px; } .list-filter input:focus { outline: none; } .list-filter .fa { position: absolute; top: 10px; left: 13px; color: #888; } .pure-checkbox input[type=\\\"checkbox\\\"] { border: 0; clip: rect(0 0 0 0); height: 1px; margin: -1px; overflow: hidden; padding: 0; position: absolute; width: 1px; } .pure-checkbox input[type=\\\"checkbox\\\"]:focus + label:before, .pure-checkbox input[type=\\\"checkbox\\\"]:hover + label:before { border-color: #0079FE; background-color: #f2f2f2; } .pure-checkbox input[type=\\\"checkbox\\\"]:active + label:before { transition-duration: 0s; } .pure-checkbox input[type=\\\"checkbox\\\"] + label { position: relative; padding-left: 2em; vertical-align: middle; user-select: none; cursor: pointer; margin: 0px; color: #000; } .pure-checkbox input[type=\\\"checkbox\\\"] + label:before { box-sizing: content-box; content: ''; color: #0079FE; position: absolute; top: 50%; left: 0; width: 14px; height: 14px; margin-top: -9px; border: 2px solid #0079FE; text-align: center; transition: all 0.4s ease; } .pure-checkbox input[type=\\\"checkbox\\\"] + label:after { box-sizing: content-box; content: ''; background-color: #0079FE; position: absolute; top: 50%; left: 4px; width: 10px; height: 10px; margin-top: -5px; transform: scale(0); transform-origin: 50%; transition: transform 200ms ease-out; } .pure-checkbox input[type=\\\"checkbox\\\"]:disabled + label:before { border-color: #cccccc; } .pure-checkbox input[type=\\\"checkbox\\\"]:disabled:focus + label:before .pure-checkbox input[type=\\\"checkbox\\\"]:disabled:hover + label:before { background-color: inherit; } .pure-checkbox input[type=\\\"checkbox\\\"]:disabled:checked + label:before { background-color: #cccccc; } .pure-checkbox input[type=\\\"checkbox\\\"] + label:after { background-color: transparent; top: 50%; left: 4px; width: 8px; height: 3px; margin-top: -4px; border-style: solid; border-color: #ffffff; border-width: 0 0 3px 3px; border-image: none; transform: rotate(-45deg) scale(0); } .pure-checkbox input[type=\\\"checkbox\\\"]:checked + label:after { content: ''; transform: rotate(-45deg) scale(1); transition: transform 200ms ease-out; } .pure-checkbox input[type=\\\"radio\\\"]:checked + label:before { animation: borderscale 300ms ease-in; background-color: white; } .pure-checkbox input[type=\\\"radio\\\"]:checked + label:after { transform: scale(1); } .pure-checkbox input[type=\\\"radio\\\"] + label:before { border-radius: 50%; } .pure-checkbox input[type=\\\"checkbox\\\"]:checked + label:before { animation: borderscale 200ms ease-in; background: #0079FE; } .pure-checkbox input[type=\\\"checkbox\\\"]:checked + label:after { transform: rotate(-45deg) scale(1); } @keyframes borderscale { 50% { box-shadow: 0 0 0 2px #0079FE; } } .list-message { text-align: center; } \"],\r\n    providers: [DROPDOWN_CONTROL_VALUE_ACCESSOR]\r\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'data': [{ type: Input },],\n'settings': [{ type: Input },],\n'onSelect': [{ type: Output, args: ['onSelect', ] },],\n'onDeSelect': [{ type: Output, args: ['onDeSelect', ] },],\n'onSelectAll': [{ type: Output, args: ['onSelectAll', ] },],\n'onDeSelectAll': [{ type: Output, args: ['onDeSelectAll', ] },],\n};\n}\n\nfunction AngularMultiSelect_tsickle_Closure_declarations() {\n/** @type {?} */\nAngularMultiSelect.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAngularMultiSelect.ctorParameters;\n/** @type {?} */\nAngularMultiSelect.propDecorators;\n/** @type {?} */\nAngularMultiSelect.prototype.data;\n/** @type {?} */\nAngularMultiSelect.prototype.settings;\n/** @type {?} */\nAngularMultiSelect.prototype.onSelect;\n/** @type {?} */\nAngularMultiSelect.prototype.onDeSelect;\n/** @type {?} */\nAngularMultiSelect.prototype.onSelectAll;\n/** @type {?} */\nAngularMultiSelect.prototype.onDeSelectAll;\n/** @type {?} */\nAngularMultiSelect.prototype.selectedItems;\n/** @type {?} */\nAngularMultiSelect.prototype.isActive;\n/** @type {?} */\nAngularMultiSelect.prototype.isSelectAll;\n/** @type {?} */\nAngularMultiSelect.prototype.filter;\n/** @type {?} */\nAngularMultiSelect.prototype.defaultSettings;\n/** @type {?} */\nAngularMultiSelect.prototype.onTouchedCallback;\n/** @type {?} */\nAngularMultiSelect.prototype.onChangeCallback;\n}\n\nexport class AngularMultiSelectModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\r\n  imports:      [ CommonModule,FormsModule ],\r\n  declarations: [AngularMultiSelect, ClickOutsideDirective, ListFilterPipe],\r\n  exports:      [AngularMultiSelect, ClickOutsideDirective, ListFilterPipe]\r\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction AngularMultiSelectModule_tsickle_Closure_declarations() {\n/** @type {?} */\nAngularMultiSelectModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAngularMultiSelectModule.ctorParameters;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport {AngularMultiSelect,ClickOutsideDirective,ListFilterPipe,AngularMultiSelectModule} from './index';\n\nexport {DROPDOWN_CONTROL_VALUE_ACCESSOR as ɵa} from './src/angular2-multiselect-dropdown/multiselect.component';"],"names":[],"mappings":"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"}